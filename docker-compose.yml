version: "3.8"
networks:
  app:
    driver: bridge

services:
  nginx:
    build: ./nginx
    links:
      - server:server
      - client:client
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/psw:/etc/nginx/psw
      - /etc/nginx/ssl:/etc/nginx/ssl

  server:
    build:
      context: ./src/server
      dockerfile: Dockerfile
      args:
        SOURCE_DIR: ${BACKEND_SOURCE_PATH}
    volumes:
      - ${BACKEND_SOURCE_PATH}:/app
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    env_file: .env
    environment:
      - NODE_ENV=development
    networks:
      - app

  client:
    build:
      context: ./src/client
      dockerfile: Dockerfile
      args:
        SOURCE_DIR: ${FRONTEND_SOURCE_PATH}
    volumes:
      - ${FRONTEND_SOURCE_PATH}:/app
    depends_on:
      - server
    ports:
      - "3000:3000"
    networks:
      - app

  mongo:
    container_name: mongo
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app
  
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
    links: 
        - mongo:mongo
    restart: unless-stopped
    networks:
      - app