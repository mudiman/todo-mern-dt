name: Dev CI/CD

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  buildServer:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.16.0]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        working-directory: ./src/server

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run the tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: eu-west-2

      - name: Build, tag, and push node image
        env:
          ECR_REGISTRY: 
          ECR_REPOSITORY: 
          IMAGE_TAG: 
        run: |
          cd ${{ github.workspace }}/docker/server
          docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

buildApp:
  runs-on: ubuntu-latest

  strategy:
    matrix:
      node-version: [14.17.5]

  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      working-directory: ./src/client

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run the tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        aws-region: eu-west-2

    - name: Build, tag, and push client image
      env:
        ECR_REGISTRY: 
        ECR_REPOSITORY: 
        IMAGE_TAG: 
      run: |
        cd ${{ github.workspace }}/docker/client
        docker build . --file Dockerfile --tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
